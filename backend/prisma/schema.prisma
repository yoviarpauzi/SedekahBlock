// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id              Int       @id @default(autoincrement())
  role            Role      @default(USER)
  name            String    @default("Orang Baik") @db.VarChar(100)
  profile_picture String    @default("https://ui-avatars.com/api/?name=Orang+Baik") @db.VarChar(100)
  wallet_address  String    @unique @db.VarChar(100)
  created_at      DateTime  @default(now())
  updated_at      DateTime? @updatedAt

  donation_histories DonationHistory[]
  Donor              Donor[]

  @@map("users")
}

model Category {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(100)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  campaigns Campaign[]

  @@map("categories")
}

model Campaign {
  id                    Int       @id @default(autoincrement())
  categories_id         Int
  title                 String    @unique @db.VarChar(100)
  target                Decimal   @db.Decimal(10, 2)
  end_at                DateTime? @db.Date
  thumbnail             String    @db.VarChar(100)
  story                 String?   @db.Text
  balance               Decimal   @default(0) @db.Decimal(10, 2)
  collected             Decimal   @default(0) @db.Decimal(10, 2)
  total_withdraw_amount Decimal   @default(0) @db.Decimal(10, 2)
  operational_costs     Decimal   @default(0) @db.Decimal(10, 2)
  is_admin_withdraw     Boolean   @default(false)
  is_active             Boolean   @default(true)
  is_withdraw           Boolean   @default(false)
  is_transfer           Boolean   @default(false)
  created_at            DateTime  @default(now())
  updated_at            DateTime? @updatedAt

  category Category @relation(fields: [categories_id], references: [id], onUpdate: Cascade, onDelete: Cascade)

  donation_histories          DonationHistory[]
  donors                      Donor[]
  news                        News[]
  fund_disbursement_histories FundDisbursementHistories[]
  transfer_histories          TransferHistories[]

  @@map("campaigns")
}

model DonationHistory {
  id           Int       @id @default(autoincrement())
  users_id     Int
  campaigns_id Int
  description  String    @db.VarChar(100)
  link         String    @db.VarChar(200)
  amount       Decimal   @db.Decimal(10, 2)
  created_at   DateTime  @default(now())
  updated_at   DateTime? @updatedAt

  users     User      @relation(fields: [users_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  campaigns Campaign? @relation(fields: [campaigns_id], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("donation_histories")
}

model Donor {
  users_id     Int
  campaigns_id Int
  amount       Decimal   @db.Decimal(10, 2)
  created_at   DateTime  @default(now())
  updated_at   DateTime? @updatedAt

  user     User     @relation(fields: [users_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  campaign Campaign @relation(fields: [campaigns_id], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@id([users_id, campaigns_id])
  @@map("donors")
}

model News {
  id           Int       @id @default(autoincrement())
  campaigns_id Int
  title        String    @db.VarChar(100)
  body         String    @db.Text()
  created_at   DateTime  @default(now())
  updated_at   DateTime? @updatedAt

  campaign Campaign @relation(fields: [campaigns_id], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("news")
}

model FundDisbursementHistories {
  id               Int       @id @default(autoincrement())
  campaigns_id     Int
  amount           Decimal   @db.Decimal(10, 2)
  title            String    @db.VarChar(100)
  body             String    @db.Text()
  receiver_address String
  created_at       DateTime  @default(now())
  updated_at       DateTime? @updatedAt

  campaign Campaign @relation(fields: [campaigns_id], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("fund_disbursement_histories")
}

model TransferHistories {
  id                   Int       @id @default(autoincrement())
  campaigns_id         Int
  receiver_campaign_id Int
  amount               Decimal   @db.Decimal(10, 2)
  created_at           DateTime  @default(now())
  updated_at           DateTime? @updatedAt

  campaign Campaign @relation(fields: [campaigns_id], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("transfer_histories")
}
