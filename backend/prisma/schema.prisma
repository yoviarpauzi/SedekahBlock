// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  name           String   @db.VarChar(100)
  email          String   @unique @db.VarChar(100)
  wallet_address String   @db.VarChar(100)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  donation_histories CampaignHistoryTransaction[]

  @@map("users")
}

model Category {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(100)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  campaigns Campaign[]

  @@map("categories")
}

model Campaign {
  id               Int      @id @default(autoincrement())
  categories_id    Int
  name             String   @unique @db.VarChar(100)
  contract_id      BigInt
  contract_address String
  balance          Float
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  category              Category                     @relation(fields: [categories_id], references: [id])
  transaction_histories CampaignHistoryTransaction[]

  @@map("campaigns")
}

model CampaignHistoryTransaction {
  id           Int      @id @default(autoincrement())
  users_id     Int
  campaigns_id Int
  amount       Float
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  donor    User     @relation(fields: [users_id], references: [id])
  campaign Campaign @relation(fields: [campaigns_id], references: [id])

  @@map("campaign_history_transactions")
}
